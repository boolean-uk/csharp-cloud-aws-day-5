// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using cohort_backend.wwwapi.Data;

#nullable disable

namespace cohort_backend.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241017131641_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("cohort_backend.wwwapi.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Goodbye",
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "Kawaii",
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Nani",
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "Me too!",
                            PostId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "What is that?",
                            PostId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("cohort_backend.wwwapi.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Hi :3",
                            Title = "Julia's post",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "uwu",
                            Title = "John's post",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "I love Judge Dredd",
                            Title = "George's post",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("cohort_backend.wwwapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FavoriteColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("favoriteColor");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastName");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Oslo",
                            Email = "julia@gmail.com",
                            FavoriteColor = "#FFC0CB",
                            FirstName = "Julia",
                            LastName = "Doe",
                            Street = "Lakkegata"
                        },
                        new
                        {
                            Id = 2,
                            City = "Gardermoen",
                            Email = "john@gmail.com",
                            FavoriteColor = "#0000FF",
                            FirstName = "John",
                            LastName = "Doe",
                            Street = "Nannestad"
                        },
                        new
                        {
                            Id = 3,
                            City = "Mega-City One",
                            Email = "george@gmail.com",
                            FavoriteColor = "#301934",
                            FirstName = "George",
                            LastName = "Doe",
                            Street = "Georgia"
                        });
                });

            modelBuilder.Entity("cohort_backend.wwwapi.Models.Comment", b =>
                {
                    b.HasOne("cohort_backend.wwwapi.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cohort_backend.wwwapi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("cohort_backend.wwwapi.Models.Post", b =>
                {
                    b.HasOne("cohort_backend.wwwapi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
